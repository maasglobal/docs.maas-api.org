{
  "tags": [
    {
      "name": "Booking",
      "description": "Booking related APIs are the core of a TSP implementation. Correspondingly, a Booking is the main object exchanged between MaaS and a TSP.",
      "externalDocs": {
        "description": "Booking scenarios",
        "url": "https://github.com/maasglobal/maas-tsp-api/blob/master/specs/Booking.md"
      }
    },
    {
      "name": "Listing",
      "description": "Before a booking can be made via a TSP, available options at a given location can be listed as follows"
    },
    {
      "name": "TODO Feedback",
      "description": "In order to receive customer feedback through MaaS, TSP may implement these APIs."
    },
    {
      "name": "TODO Admin",
      "description": "In the future MaaS will implement machine-readable APIs that a TSP may use to update GTFS route information, API keys and other information that is needed for communicating between MaaS and a TSP."
    }
  ],
  "paths": {
    "/bookings/options/": {
      "get": {
        "description": "Returns available transport options for given coordinates. Start time can be defined, but is optional. If startTime is not provided, but required by the third party API, a default value of \"Date.now()\" is used.",
        "tags": [
          "Listing"
        ],
        "schemes": [
          "https"
        ],
        "consumes": [
          "query"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "from",
            "description": "User's location in comma separated form e.g. 60.123,27.456",
            "in": "query",
            "required": true,
            "type": "string",
            "pattern": "^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$"
          },
          {
            "name": "to",
            "description": "A desired destination e.g. 60.123,27.456",
            "in": "query",
            "required": false,
            "type": "string",
            "pattern": "^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?)$"
          },
          {
            "name": "startTime",
            "description": "Check availability of transportation in future. Must be noted that not all providers (TSP's) support reservation or availability listing in future, thus optional.",
            "in": "query",
            "required": false,
            "$ref": "#/definitions/time"
          },
          {
            "name": "endTime",
            "description": "A possible end time e.g. for a car rental",
            "required": false,
            "$ref": "#/definitions/time"
          },
          {
            "name": "mode",
            "required": false,
            "$ref": "#/definitions/mode"
          }
        ],
        "responses": {
          "200": {
            "description": "Available transport methods matching the given query parameters. If no transport methods are available, an empty array is returned.",
            "schema": {
              "name": "options",
              "type": "array",
              "description": "Available transport options for the queried TSP",
              "items": {
                "$ref": "#/definitions/options"
              }
            }
          },
          "400": {
            "description": "If coordinates given in the request are invalid the server returns 400 Bad request as a response.",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/bookings/": {
      "get": {
        "description": "Returns the `Booking` that has been created earlier",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "Booking"
        ],
        "responses": {
          "200": {
            "description": "The bookings matching the query",
            "schema": {
              "x-oad-type": "array",
              "type": "array",
              "description": "The bookings that matched the query (zero or more)",
              "items": {
                "x-oad-type": "reference",
                "$ref": "#/definitions/booking"
              }
            },
            "x-oad-type": "response"
          },
          "400": {
            "description": "Bad request (invalid query parameters)",
            "schema": {
              "x-oad-type": "reference",
              "$ref": "#/definitions/error"
            },
            "x-oad-type": "response"
          },
          "401": {
            "description": "Authorization error (invalid API key)",
            "schema": {
              "x-oad-type": "reference",
              "$ref": "#/definitions/error"
            },
            "x-oad-type": "response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "x-oad-type": "reference",
              "$ref": "#/definitions/error"
            },
            "x-oad-type": "response"
          }
        },
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "description": "The state the booking to fetch",
            "required": true,
            "type": "string",
            "format": "enum - BOOKED - CANCELLED - PAID - UPDATE_REQUESTED - UPDATED - STARTED - FINISHED",
            "x-oad-type": "parameter"
          }
        ]
      },
      "post": {
        "description": "Creates a new `Booking` for the TSP in **booked** state. The returned object will be a refrence that is passed back & forth throughout the booking life cycle.\nThe Booking may be modified in the response, e.g. location being adjusted for a more suitable pick-up location.\nIn addition, the service may contain a **meta** attribute for arbitrary TSP metadata that the TSP needs later, and **token** attribute depicting how long the current state is valid.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "Booking"
        ],
        "responses": {
          "200": {
            "description": "A new booking was succesfully created",
            "schema": {
              "x-oad-type": "reference",
              "$ref": "#/definitions/booking"
            },
            "x-oad-type": "response"
          },
          "400": {
            "description": "Bad request (invalid body parameters)",
            "schema": {
              "x-oad-type": "reference",
              "$ref": "#/definitions/error"
            },
            "x-oad-type": "response"
          },
          "401": {
            "description": "Authorization error (invalid API key)",
            "schema": {
              "x-oad-type": "reference",
              "$ref": "#/definitions/error"
            },
            "x-oad-type": "response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "x-oad-type": "reference",
              "$ref": "#/definitions/error"
            },
            "x-oad-type": "response"
          }
        },
        "parameters": [
          {
            "name": "newBooking",
            "in": "body",
            "description": "New `Booking` data",
            "required": true,
            "schema": {
              "x-oad-type": "reference",
              "$ref": "#/definitions/newBooking"
            },
            "x-oad-type": "parameter"
          }
        ]
      },
      "x-oad-type": "operation"
    },
    "/bookings/{id}": {
      "get": {
        "description": "Returns the `Bookings` that have been created through the system.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "Booking"
        ],
        "responses": {
          "200": {
            "description": "The booking was found",
            "schema": {
              "x-oad-type": "reference",
              "$ref": "#/definitions/booking"
            },
            "x-oad-type": "response"
          },
          "400": {
            "description": "Bad request (invalid query or body parameters)",
            "schema": {
              "x-oad-type": "reference",
              "$ref": "#/definitions/error"
            },
            "x-oad-type": "response"
          },
          "401": {
            "description": "Authorization error (invalid API key)",
            "schema": {
              "x-oad-type": "reference",
              "$ref": "#/definitions/error"
            },
            "x-oad-type": "response"
          },
          "404": {
            "description": "The booking was not found",
            "schema": {
              "x-oad-type": "reference",
              "$ref": "#/definitions/error"
            },
            "x-oad-type": "response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "x-oad-type": "reference",
              "$ref": "#/definitions/error"
            },
            "x-oad-type": "response"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Booking identifier",
            "required": true,
            "type": "string",
            "x-oad-type": "parameter"
          }
        ]
      },
      "put": {
        "description": "Modifies the state of a `Booking`, e.g. **cancels**, **pays** or **reschedules** it. The previous booking information is passed forward as-is for reference.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "schemes": [
          "https"
        ],
        "tags": [
          "Booking"
        ],
        "responses": {
          "200": {
            "description": "The booking was modified",
            "schema": {
              "x-oad-type": "reference",
              "$ref": "#/definitions/booking"
            },
            "x-oad-type": "response"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "x-oad-type": "reference",
              "$ref": "#/definitions/error"
            },
            "x-oad-type": "response"
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Booking identifier",
            "required": true,
            "type": "string",
            "x-oad-type": "parameter"
          },
          {
            "name": "booking",
            "in": "body",
            "description": "New `Booking` data",
            "required": true,
            "schema": {
              "x-oad-type": "reference",
              "$ref": "#/definitions/booking"
            },
            "x-oad-type": "parameter"
          }
        ]
      },
      "x-oad-type": "operation"
    }
  },
  "definitions": {
    "error": {
      "x-oad-type": "object",
      "type": "object",
      "title": "Error",
      "description": "An error that the service may send, e.g. in case of invalid input, missing authorization or internal service error.",
      "properties": {
        "message": {
          "x-oad-type": "string",
          "type": "string",
          "title": "Message",
          "description": "A human readable error message (preferrably in English)"
        },
        "code": {
          "x-oad-type": "string",
          "type": "string",
          "title": "Code",
          "description": "A TSP internal error code, used for reference"
        }
      },
      "required": [
        "message",
        "code"
      ]
    },
    "newBooking": {
      "x-oad-type": "object",
      "type": "object",
      "title": "New booking",
      "description": "A new booking, created by MaaS POST request in 'new' state",
      "properties": {
        "state": {
          "x-oad-type": "string",
          "type": "string",
          "title": "Booking state",
          "description": "The state of the booking (always new for new bookings)",
          "enum": [
            "NEW"
          ]
        },
        "leg": {
          "x-oad-type": "reference",
          "$ref": "#/definitions/leg"
        },
        "customer": {
          "x-oad-type": "reference",
          "$ref": "#/definitions/customer"
        }
      },
      "required": [
        "leg",
        "customer"
      ]
    },
    "booking": {
      "x-oad-type": "object",
      "type": "object",
      "title": "Booking",
      "description": "The booking information describing the state and details of the transaction",
      "properties": {
        "id": {
          "x-oad-type": "string",
          "type": "string",
          "title": "ID",
          "description": "The identifier MaaS will be using to referring to the booking"
        },
        "state": {
          "x-oad-type": "reference",
          "$ref": "#/definitions/bookingState"
        },
        "terms": {
          "x-oad-type": "reference",
          "$ref": "#/definitions/bookingState"
        },
        "token": {
          "x-oad-type": "reference",
          "$ref": "#/definitions/token"
        },
        "meta": {
          "x-oad-type": "object",
          "type": "object",
          "title": "Meta",
          "description": "Arbitrary metadata that a TSP can add"
        }
      },
      "required": [
        "id",
        "state",
        null,
        null,
        "token"
      ]
    },
    "bookingState": {
      "x-oad-type": "string",
      "type": "string",
      "title": "Booking state",
      "description": "The life-cycle state of the booking (from NEW to FINISHED)",
      "enum": [
        "NEW",
        "BOOKED",
        "CANCELLED",
        "PAID",
        "UPDATE_REQUESTED",
        "UPDATED",
        "STARTED",
        "FINISHED"
      ]
    },
    "token": {},
    "customer": {
      "x-oad-type": "object",
      "type": "object",
      "title": "Customer",
      "properties": {
        "id": {
          "x-oad-type": "string",
          "type": "string",
          "title": "ID",
          "description": "The identifier MaaS uses to identify the customer"
        },
        "firstName": {
          "x-oad-type": "string",
          "type": "string",
          "title": "First name",
          "description": "First name of the customer (e.g. John)"
        },
        "lastName": {
          "x-oad-type": "string",
          "type": "string",
          "title": "Last name",
          "description": "Last name of the customer (e.g. Doe)"
        },
        "phone": {
          "x-oad-type": "string",
          "type": "string",
          "title": "Phone",
          "description": "Phone number that the customer may be reached from"
        }
      },
      "required": [
        "id",
        "firstName",
        "lastName"
      ]
    },
    "options": {
      "type": "object",
      "description": "Containing an array of available options matching the query",
      "properties": {
        "leg": {
          "$ref": "#/definitions/options_leg"
        },
        "meta": {
          "$ref": "#/definitions/options_meta"
        }
      }
    },
    "options_leg": {
      "type": "object",
      "properties": {
        "startTime": {
          "$ref": "#/definitions/time"
        },
        "endTime": {
          "$ref": "#/definitions/time"
        },
        "from": {
          "$ref": "#/definitions/options_coordinates"
        },
        "to": {
          "$ref": "#/definitions/options_coordinates"
        }
      }
    },
    "options_coordinates": {
      "type": "object",
      "properties": {
        "lat": {
          "$ref": "#/definitions/lat"
        },
        "lon": {
          "$ref": "#/definitions/lon"
        }
      }
    },
    "options_meta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "image": {
          "type": "string",
          "format": "url"
        },
        "car": {
          "type": "object",
          "properties": {
            "passengers": {
              "type": "integer"
            }
          }
        }
      }
    },
    "leg": {
      "x-oad-type": "object",
      "type": "object",
      "title": "Leg",
      "description": "A OpenTripPlanner compatible definition of a leg (see OpenTripPlanner docs for reference)",
      "properties": {
        "from": {
          "x-oad-type": "reference",
          "$ref": "#/definitions/place"
        },
        "to": {
          "x-oad-type": "reference",
          "$ref": "#/definitions/place"
        },
        "startTime": {
          "x-oad-type": "reference",
          "$ref": "#/definitions/time"
        },
        "endTime": {
          "x-oad-type": "reference",
          "$ref": "#/definitions/time"
        },
        "mode": {
          "x-oad-type": "reference",
          "$ref": "#/definitions/mode"
        },
        "departureDelay": {
          "x-oad-type": "reference",
          "$ref": "#/definitions/duration"
        },
        "arrivalDelay": {
          "x-oad-type": "reference",
          "$ref": "#/definitions/duration"
        },
        "distance": {
          "x-oad-type": "reference",
          "$ref": "#/definitions/distance"
        },
        "fare": {
          "x-oad-type": "reference",
          "$ref": "#/definitions/fare"
        },
        "route": {
          "x-oad-type": "string",
          "type": "string",
          "title": "Route"
        },
        "routeShortName": {
          "x-oad-type": "string",
          "type": "string",
          "title": "Route short name"
        },
        "routeLongName": {
          "x-oad-type": "string",
          "type": "string",
          "title": "Route long name"
        },
        "agencyId": {
          "x-oad-type": "string",
          "type": "string",
          "title": "Agency ID"
        },
        "legGeometry": {
          "x-oad-type": "reference",
          "$ref": "#/definitions/legGeometry"
        }
      },
      "required": [
        "from",
        "to",
        "mode",
        "startTime",
        "endTime"
      ]
    },
    "place": {
      "x-oad-type": "object",
      "type": "object",
      "title": "Place",
      "properties": {
        "name": {
          "x-oad-type": "string",
          "type": "string",
          "title": "Name",
          "description": "Human readable name of the place"
        },
        "stopId": {
          "x-oad-type": "string",
          "type": "string",
          "title": "Stop ID"
        },
        "stopCode": {
          "x-oad-type": "string",
          "type": "string",
          "title": "Stop code"
        },
        "lat": {
          "$ref": "#/definitions/lat"
        },
        "lon": {
          "$ref": "#/definitions/lon"
        }
      },
      "required": [
        "lon",
        "lat"
      ]
    },
    "lat": {
      "type": "number",
      "minimum": -90,
      "maximum": 90
    },
    "lon": {
      "type": "number",
      "minimum": -180,
      "maximum": 180
    },
    "legGeometry": {
      "x-oad-type": "object",
      "type": "object",
      "title": "Leg geometry",
      "properties": {
        "points": {
          "x-oad-type": "string",
          "type": "string",
          "title": "Points"
        }
      }
    },
    "time": {
      "x-oad-type": "integer",
      "description": "A UTC timestamp (number of milliseconds in a Date object since January 1, 1970, 00:00:00)",
      "type": "integer",
      "title": "Time",
      "format": "int32"
    },
    "duration": {
      "x-oad-type": "integer",
      "type": "integer",
      "title": "Duration",
      "description": "A duration of some time (relative to time) in milliseconds",
      "format": "int32"
    },
    "distance": {
      "x-oad-type": "integer",
      "type": "integer",
      "title": "Distance",
      "description": "The estimated distance travelled in the leg (in meters)",
      "format": "int32"
    },
    "fare": {
      "x-oad-type": "object",
      "type": "object",
      "title": "Fare",
      "description": "Arbitrary fare data that MaaS will use internally"
    },
    "mode": {
      "x-oad-type": "string",
      "type": "string",
      "title": "Mode",
      "description": "The type of the leg MaaS uses to identify the leg",
      "enum": [
        "WALK",
        "BICYCLE",
        "CAR",
        "TRAM",
        "SUBWAY",
        "RAIL",
        "BUS",
        "FERRY",
        "CABLE_CAR",
        "GONDOLA",
        "FUNICULAR",
        "TRANSIT",
        "TRAINISH",
        "BUSISH",
        "LEG_SWITCH",
        "TAXI"
      ]
    }
  },
  "security": [
    {
      "key": []
    }
  ],
  "securityDefinitions": {
    "key": {
      "description": "MaaS can authenticate using an access token as part of the HTTP(S) headers. The keys are sent as part of every request that MaaS makes to the TSP API with a `x-api-key` custom header option.\n",
      "name": "X-Api-Key",
      "in": "header",
      "type": "apiKey"
    }
  },
  "info": {
    "title": "MaaS-TSP",
    "version": "v1",
    "description": "This is a API specification of REST endpoints that a Transport Service Provider (TSP) should implement to receive messages from MaaS. It is written in machine readable [Swagger](http://swagger.io/) format, so thatAPI endpoints, validators and test clients can be generated from the documentation.\n\nIn addition to this documentation, MaaS maintains a [reference implementation (**TODO**)](https://github.com/maasglobal/maas-tsp-api) with test cases. It is also running as a [reference service (**TODO**)](https://tsp.maas.global/).\n\nRight now MaaS TSP API consists of the Booking API. In addition, a need for customer feedback API (for mediating customer feedback to a TSP) and administration API (for changing API keys etc.) may be defined.\n",
    "termsOfService": "http://api.maas.global/terms/",
    "contact": {
      "name": "MaaS API Team",
      "email": "developers@maas.fi",
      "url": "http://maas.fi/"
    },
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    }
  },
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "swagger": "2.0"
}
